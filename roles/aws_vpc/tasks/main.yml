---
- name: Create AWS Virtual Private Cloud
  ec2_vpc_net:
    name: "kubernetes-vpc-{{ aws_cluster_name }}"
    state: present
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    cidr_block: "{{ aws_vpc_cidr_block }}"
    dns_hostnames: yes
    dns_support: yes
    tags:
      Name: "kubernetes-vpc-{{ aws_cluster_name }}"
  register: vpc

- name: print vpc output
  debug:
    var: vpc

- name: set fact vpc_id
  set_fact:
    vpc_id: "{{ vpc.vpc.id }}"

- name: allocate a new elastic IP inside a VPC
  ec2_eip:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    state: present
    in_vpc: yes
    reuse_existing_ip_allowed: yes
  register: eip

- name: print eip output
  debug:
    var: eip

- name: set fact allocation_id
  set_fact:
    allocation_id: "{{ eip.allocation_id }}"

- name: Create VPC Internet Gateway
  ec2_vpc_igw:
    vpc_id: " {{ vpc_id }}"
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    state: present
    tags:
      Name: "kubernetes-internetgw-{{ aws_cluster_name }}"
  register: igw
  ignore_errors: yes

- name: Gather facts about a filtered list of Internet Gateways
  ec2_vpc_igw_facts:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    filters:
        "tag:Name": "kubernetes-internetgw-{{ aws_cluster_name }}"
  register: igw_facts

- name: print igw_facts
  debug:
    var: igw_facts

- name: set fact igw_id
  set_fact:
    igw_id: "{{ igw_facts.internet_gateways[0].internet_gateway_id }}"

- name: Create public VPC Subnet
  ec2_vpc_subnet:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    state: present
    vpc_id: " {{ vpc_id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.availability_zone }}"
    map_public: yes
    resource_tags:
      Name: "kubernetes-public-subnet-{{ aws_cluster_name }}"
      "kubernetes.io/cluster/mydevopscluster": member
  register: kubernetes_public_subnet
  with_items: "{{ aws_subnet_public }}"

- ec2_vpc_subnet_facts:
    filters:
      region: "{{ ec2_region }}"
      ec2_access_key: "{{ ec2_access_key }}"
      ec2_secret_key: "{{ ec2_secret_key }}"
      "tag:Name": "kubernetes-public-subnet-{{ aws_cluster_name }}"
  register: subnet_facts

- name: set fact kubernetes_public_subnet
  set_fact:
    subnet_ids: "{{ subnet_facts.results|map(attribute='subnets.0.id')|list }}"

- name: Create new nat gateway using an allocation-id
  ec2_vpc_nat_gateway:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    state: present
    subnet_id: "{{ item }}"
    allocation_id: "{{ allocation_id }}"
  register: nat_gateway
  with_items: "{{ subnet_ids }}"

- name: print nat gateway output
  debug:
    var: nat_gateway

- name: Create private VPC Subnet
  ec2_vpc_subnet:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    state: present
    vpc_id: " {{ vpc_id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.availability_zone }}"
    map_public: yes
    resource_tags:
      Name: "kubernetes-private-subnet-{{ aws_cluster_name }}"
      "kubernetes.io/cluster/mydevopscluster": member
  register: kubernetes_private_subnet
  with_items: "{{ aws_subnet_private }}"

- name: print private subnet output
  debug:
    var: kubernetes_private_subnet