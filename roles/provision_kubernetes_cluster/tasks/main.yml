---
- name: Provision Kubernetes Master VMs
  ec2:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    keypair: "{{ ec2_keypair }}"
    group: "{{ ec2_security_group_name }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ec2_image }}"
    instance_tags:
      kube: master
    count: 1
    wait: true
    vpc_subnet_id: subnet-58c56133
    assign_public_ip: yes
  register: ec2_master

- name: print provision output
  debug:
    var: ec2_master

- name: Add the newly created EC2 instance(s) to host group
  lineinfile:
    dest: "{{ hostpath }}"
    regexp: "{{ item.public_ip }}"
    insertafter: "[kube-master]"
    line: "{{ item.public_dns_name }} ansible_ssh_host={{ item.public_ip }} {{hoststring}}"
    state: present
  with_items: ec2_master.instances

- name: Add the newly created EC2 instance(s) to host group
  lineinfile:
    dest: "{{ hostpath }}"
    regexp: "{{ item.public_ip_address }}"
    insertafter: "[etcd]"
    line: "{{ item.public_dns_name }} ansible_ssh_host={{ item.public_ip_address }} {{hoststring}}"
    state: present
  with_items: ec2_master.instances

- wait_for: path={{ hostpath }} search_regex={{hoststring}}

- name: Wait for SSH to come up
  local_action: wait_for
                host={{ item.public_ip_address }}
                port=22
                state=started
  with_items: ec2_master.instances

#- name: Add IP to ec2_hosts group
#  add_host: hostname={{ item.public_ip }} groups=ec2_hosts
#  with_items: ec2_master.instances

- name: Provision Kubernetes Node VMs
  ec2:
    region: "{{ ec2_region }}"
    ec2_access_key: "{{ ec2_access_key }}"
    ec2_secret_key: "{{ ec2_secret_key }}"
    keypair: "{{ ec2_keypair }}"
    group: "{{ ec2_security_group_name }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ec2_image }}"
    instance_tags:
      kube: node
    count: 3
    wait: true
  register: ec2_nodes

- name: print provision output
  debug:
    var: ec2_nodes

- name: Add the newly created EC2 instance(s) to host group
  lineinfile:
    dest: "{{ hostpath }}"
    regexp: "{{ item.public_ip_address }}"
    insertafter: "[kube-node]"
    line: "{{ item.public_dns_name }} ansible_ssh_host={{ item.public_ip_address }} {{hoststring}}"
    state: present
  with_items:
    - ec2_nodes.instances

- name: Add the newly created EC2 instance(s) to host group
  lineinfile:
    dest: "{{ hostpath }}"
    regexp: "{{ item.public_ip_address }}"
    insertafter: "[all]"
    line: "{{ item.public_dns_name }} ansible_ssh_host={{ item.public_ip_address }} {{hoststring}}"
    state: present
  with_items:
    - ec2_master.instances
    - ec2_nodes.instances

- wait_for:
    path: "{{ hostpath }}"
    search_regex: "{{ hoststring }}"

- name: Wait for SSH to come up
  local_action: wait_for
                host={{ item.public_ip }}
                port=22
                state=started
  with_items: ec2_nodes.instances[0]

#- name: Add IP to ec2_hosts group
#  add_host:
#    hostname: "{{ item.public_ip }}"
#    groups: ec2_hosts
#  with_items: ec2_nodes.instances